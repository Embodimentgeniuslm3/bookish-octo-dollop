<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="15.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup Label="Globals">
    <ProjectGuid>{43ce4ce5-0010-4b99-9569-672670d26e26}</ProjectGuid>
    <Keyword>Win32Proj</Keyword>
    <ProjectName>Microsoft.Terminal.Remoting.Lib</ProjectName>
    <RootNamespace>Microsoft.Terminal.Remoting</RootNamespace>
    <TargetName>Microsoft.Terminal.Remoting.Lib</TargetName>
    <WindowsTargetPlatformMinVersion>10.0.17763.0</WindowsTargetPlatformMinVersion>
    <ConfigurationType>StaticLibrary</ConfigurationType>
    <SubSystem>Console</SubSystem>
    <OpenConsoleUniversalApp>true</OpenConsoleUniversalApp>
  </PropertyGroup>
  <Import Project="..\..\..\common.openconsole.props" Condition="'$(OpenConsoleDir)'==''" />
  <Import Project="$(OpenConsoleDir)src\cppwinrt.build.pre.props" />

  <ItemDefinitionGroup>

    <ClCompile>
      <!-- For CLI11: It uses dynamic_cast to cast types around, which depends
      on being compiled with RTTI (/GR). We need this in this project, because
      we're including the CLI11 header via the CommandlineArgs project. -->
      <RuntimeTypeInfo>true</RuntimeTypeInfo>
    </ClCompile>
  </ItemDefinitionGroup>

  <!-- ========================= Headers ======================== -->
  <ItemGroup>
    <ClInclude Include="Monarch.h">
      <DependentUpon>Monarch.idl</DependentUpon>
    </ClInclude>
    <ClInclude Include="pch.h" />
    <ClInclude Include="MonarchFactory.h" />
    <ClInclude Include="Peasant.h">
      <DependentUpon>Peasant.idl</DependentUpon>
    </ClInclude>
    <ClInclude Include="WindowManager.h">
      <DependentUpon>WindowManager.idl</DependentUpon>
    </ClInclude>
    <ClInclude Include="CommandlineArgs.h">
      <DependentUpon>Peasant.idl</DependentUpon>
    </ClInclude>
  </ItemGroup>
  <!-- ========================= Cpp Files ======================== -->
  <ItemGroup>
    <ClCompile Include="Monarch.cpp">
      <DependentUpon>Monarch.idl</DependentUpon>
    </ClCompile>
    <ClCompile Include="pch.cpp">
      <PrecompiledHeader>Create</PrecompiledHeader>
    </ClCompile>
    <ClCompile Include="Peasant.cpp">
      <DependentUpon>Peasant.idl</DependentUpon>
    </ClCompile>
    <ClCompile Include="WindowManager.cpp">
      <DependentUpon>WindowManager.idl</DependentUpon>
    </ClCompile>
    <ClCompile Include="CommandlineArgs.cpp">
      <DependentUpon>Peasant.idl</DependentUpon>
    </ClCompile>
    <ClCompile Include="$(GeneratedFilesDir)module.g.cpp" />
  </ItemGroup>
  <!-- ========================= idl Files ======================== -->
  <ItemGroup>
    <Midl Include="Monarch.idl" />
    <Midl Include="Peasant.idl" />
    <Midl Include="WindowManager.idl" />
  </ItemGroup>
  <!-- ========================= Misc Files ======================== -->
  <ItemGroup>
    <PRIResource Include="Resources\en-US\Resources.resw" />
    <OCResourceDirectory Include="Resources" />
    <None Include="packages.config" />
  </ItemGroup>
  <!-- ========================= Project References ======================== -->
  <ItemGroup>
    <!--
      the packaging project won't recurse through our dependencies, you have to
      make sure that if you add a cppwinrt dependency to any of these projects,
      you also update all the consumers
    -->
    <ProjectReference Include="$(OpenConsoleDir)src\types\lib\types.vcxproj" />
    <ProjectReference Include="$(OpenConsoleDir)src\cascadia\WinRTUtils\WinRTUtils.vcxproj">
      <Project>{CA5CAD1A-039A-4929-BA2A-8BEB2E4106FE}</Project>
      <ReferenceOutputAssembly>false</ReferenceOutputAssembly>
    </ProjectReference>

    <ProjectReference Include="$(OpenConsoleDir)src\cascadia\CommandlineArgs\CommandlineArgs.vcxproj" >
      <Private>true</Private>
      <CopyLocalSatelliteAssemblies>false</CopyLocalSatelliteAssemblies>
      <!-- Make sure to set ReferenceOutputAssembly=false, or we'll try and
      MDMERGE with MUX from the CommandlineArgs output, and get duplicate type
      errors everywhere. -->
      <ReferenceOutputAssembly>false</ReferenceOutputAssembly>

      <!-- This is going to turn into a disaster. We still need to reference MUX
      to get mdmerge happy, but we can't roll that up without rolling up the DLL
      and now we'll get duplicate types in WT.vcxproj. GAH. We'll need to have
      Remoting accept a callback to say "I encountered a commandline, someone,
      deal with it?", then have apphost register for that callback. So the flow
      is monarch->AppHost->AppLogic -->

    </ProjectReference>
    <!-- For whatever reason, we can't include the TerminalControl and
    TerminalSettings projects' winmds via project references. So we'll have to
    manually include the winmds as References below -->


    <Reference Include="Microsoft.Terminal.TerminalConnection">
      <HintPath>$(OpenConsoleCommonOutDir)TerminalConnection\Microsoft.Terminal.TerminalConnection.winmd</HintPath>
      <IsWinMDFile>true</IsWinMDFile>
      <Private>false</Private>
      <CopyLocalSatelliteAssemblies>false</CopyLocalSatelliteAssemblies>
    </Reference>
    <Reference Include="Microsoft.Terminal.TerminalControl">
      <HintPath>$(OpenConsoleCommonOutDir)TerminalControl\Microsoft.Terminal.TerminalControl.winmd</HintPath>
      <IsWinMDFile>true</IsWinMDFile>
      <Private>false</Private>
      <CopyLocalSatelliteAssemblies>false</CopyLocalSatelliteAssemblies>
    </Reference>
    <Reference Include="Microsoft.Terminal.Settings.Model">
      <HintPath>$(OpenConsoleCommonOutDir)Microsoft.Terminal.Settings.Model\Microsoft.Terminal.Settings.Model.winmd</HintPath>
      <IsWinMDFile>true</IsWinMDFile>
      <Private>false</Private>
      <CopyLocalSatelliteAssemblies>false</CopyLocalSatelliteAssemblies>
    </Reference>
  </ItemGroup>
  <!-- ====================== Compiler & Linker Flags ===================== -->
  <ItemDefinitionGroup>
    <ClCompile>
      <PrecompiledHeaderFile>pch.h</PrecompiledHeaderFile>
    </ClCompile>
    <Link>
      <AdditionalDependencies>WindowsApp.lib;user32.lib;shell32.lib;%(AdditionalDependencies)</AdditionalDependencies>
    </Link>
    <Reference>
      <Private>false</Private>
    </Reference>
  </ItemDefinitionGroup>
  <!-- ========================= Globals ======================== -->
  <Import Project="$(OpenConsoleDir)src\cppwinrt.build.post.props" />

  <Import Project="$(SolutionDir)build\rules\CollectWildcardResources.targets" />
</Project>
